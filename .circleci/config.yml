# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.15
        environment:
          NODE_ENV: circleci
          CC_TEST_REPORTER_ID: b0a733c16dd63abc6cb21bf9956550d57e05724bc92e58892b306af99963a261

      - image: circleci/postgres:9.6.8
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: srt
          POSTGRES_PASSWORD: srtpass

#    parallelism: 3

    working_directory: ~/repo

    steps:
      - checkout

      - run: sudo apt update
      - run: sudo apt install postgresql-client

      - run:
          name: Waiting for PostgreSQL to start
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 2
            done
            echo Failed waiting for Postgres && exit 1

      # Download and cache dependencies
      - restore_cache:
          key: v1.1-dependencies-{{ checksum "package.json" }}

      - run: test ! -d node_modules && npm install || echo "node modules were cached"

      - save_cache:
          paths:
            - node_modules
            - cc-test-reporter
          key: v1.1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run: cp srt-db.crypt srt-database.sql.gz
      - run: ./node_modules/.bin/cryptify -p ${CRYPTIFY} -d srt-database.sql.gz
      - run: rm srt-database.sql || true
      - run: gzip -d srt-database.sql.gz
      - run: export PGPASSWORD=srtpass && psql -h "localhost"  srt circleci < srt-database.sql
      - run: ./node_modules/.bin/sequelize --config ./server/config/dbConfig.js db:migrate

      - run:
         name: Run the Tests
         environment:
           NODE_ENV: circle
#          command: npm run circleci
         command: |
              ./cc-test-reporter before-build
              npm run circleci
              ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?


