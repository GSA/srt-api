{
  "name": "section508dash",
  "version": "1.0.1",
  "description": "Web services to see 508 compliance predictions for solicitations posted to FBO",
  "main": "index.js",
  "scripts": {
    "start": "node_modules/.bin/sequelize db:migrate &&  node server/server.js",
    "dev": "export JWT_SECRET=abc123 && export NODE_ENV=development && export MAIL_ENGINE=nodemailer-mock && node_modules/.bin/sequelize db:migrate && node --max-old-space-size=256 server/server.js",
    "dev-monitor": "export JWT_SECRET=abc123 && export NODE_ENV=development && export MAIL_ENGINE=nodemailer-mock && node_modules/.bin/sequelize db:migrate && nodemon node --max-old-space-size=256 server/server.js",
    "old-test": "export NODE_ENV=test || SET NODE_ENV=test && mocha server/**/*.test.js",
    "analysis": "snyk test",
    "test": "export JWT_SECRET=abcd && export NODE_ENV=development && export MAIL_ENGINE=nodemailer-mock && ./node_modules/.bin/jest --runInBand --detectOpenHandles --config=jest.config.js ",
    "test_verbose": "export JWT_SECRET=abcd && export NODE_ENV=development && export MAIL_ENGINE=nodemailer-mock && ./node_modules/.bin/jest --runInBand --detectOpenHandles --config=jest.config.js --verbose",
    "circleci": "export JWT_SECRET=123456789 && MAIL_ENGINE=nodemailer-mock && ./node_modules/.bin/snyk test &&  circleci tests glob server/tests/**/* | circleci tests split --split-by=timings | xargs ./node_modules/.bin/jest  --detectOpenHandles --config=jest.config.js ",
    "test-watch": "export NODE_ENV=development && export MAIL_ENGINE=nodemailer-mock &&  jest --detectOpenHandles --config=jest.config.js --watch ",
    "backup-db": "export PGPASSWORD=srtpass && pg_dump -U circleci -d srt -h localhost > srt-database-export.sql &&  gzip -8 srt-database-export.sql && cp srt-database-export.sql.gz srt-db.crypt && export CRYPTIFY=Blue-Cast-1-Heavy-Bird && ./node_modules/.bin/cryptify -c aes-256-cbc -p ${CRYPTIFY} -e  srt-db.crypt",
    "restore-db": "cp srt-db.crypt srt-database-export.sql.gz && export CRYPTIFY=\"${CRYPTIFY:=Blue-Cast-1-Heavy-Bird}\" &&./node_modules/.bin/cryptify -c aes-256-cbc -p ${CRYPTIFY} -d srt-database-export.sql.gz && export PGPASSWORD=\"${PGPASSWORD:=srtpass}\" && export PGUSER=\"${PGUSER:=circleci}\" && export PGHOST=\"${PGHOST:=localhost}\" && export PGDATABASE=\"${PGDATABASE:=srt}\" &&  rm -f srt-database.sql* srt-database.sql.gz && cp srt-database-export.sql.gz srt-database.sql.gz && gzip -d srt-database.sql.gz && dropdb  ${PGDATABASE} && createdb ${PGDATABASE} && psql  <srt-database.sql ",
    "restore-stage": "export PGPASSWORD=srtpass && export PGUSER=circleci && export PGHOST=192.168.33.22 && export PGDATABASE=srt && dropdb  ${PGDATABASE} && createdb ${PGDATABASE} && psql  < stage-database.sql ",
    "startdb": "export CRYPTIFY=Blue-Cast-1-Heavy-Bird && mkdir -p docker/sql && rm -f docker/sql/srt-database-export* && cp srt-db.crypt docker/sql/srt-database-export.sql.gz && cd docker/sql && ../.././node_modules/.bin/cryptify -c aes-256-cbc -p ${CRYPTIFY} -d srt-database-export.sql.gz && gzip -d srt-database-export.sql.gz && cd .. && ./run-pg.sh && cd .. && node_modules/.bin/sequelize db:migrate",
    "loaddbbackup": "export PGHOST=localhost && export PGDATABASE=srt && export PGUSER=circleci && export PGPASSWORD=srtpass && zcat dbbackup.sql.gz | psql && node_modules/.bin/sequelize db:migrate ",
    "killIdle": "ps -eaf | grep idle | grep -v grep | grep -v 4801 | grep -o \"^[0-9]*[^0-9]*[0-9]*\" | grep -o \"[0-9]*$\" | sudo xargs kill -9 ",
    "doc": "node_modules/.bin/jsdoc  -d docs -R ./README.md -r server/routes server/models",
    "snyk-protect": "snyk-protect",
    "prepare": "npm run snyk-protect",
    "cf-dev-log": "echo 'run this: cf logs srt-server-dev | grep -o \"OUT .*\" | sed \"s/^OUT //\"  | grep \"^\\[\"  | jq \".[2]\" | grep -v \"^.GET\" | grep -v \"^.POST\" | cut -c -$COLUMNS'"
  },
  "author": "TCG",
  "license": "ISC",
  "dependencies": {
    "@albertcrowley/winston-pg-native": "github:albertcrowley/winston-pg-native",
    "@snyk/protect": "^1.1234.0",
    "body-parser": "^1.20.2",
    "cas-authentication": "0.0.8",
    "clone-deep": "^4.0.1",
    "cors": "^2.8.5",
    "cron": "^1.8.2",
    "express": "^4.17.1",
    "express-session": "^1.17.3",
    "express-winston": "^3.4.0",
    "flatted": "^3.2.9",
    "json2csv": "^5.0.7",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.21",
    "memorystore": "^1.6.7",
    "moment": "^2.29.1",
    "ms": "^2.1.3",
    "nodemailer": "^6.9.5",
    "pg": "^8.11.3",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.33.0",
    "sequelize-cli": "^6.6.1",
    "umzug": "^2.3.0",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "cryptify": "^3.0.3",
    "eslint": "^5.16.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-node": "^8.0.1",
    "eslint-plugin-promise": "^4.3.1",
    "eslint-plugin-standard": "^4.1.0",
    "expect": "^1.20.2",
    "jest": "^26.6.3",
    "jest-extended": "^0.11.5",
    "jsdoc": "^3.6.7",
    "mock-express-request": "^0.2.2",
    "mock-express-response": "^0.2.2",
    "nodemailer-mock": "^1.5.3",
    "nodemon": "^2.0.7",
    "random-words": "^1.1.1",
    "sequelize-cli": "^6.6.1",
    "sinon": "^7.5.0",
    "snyk": "^1.1154.0",
    "supertest": "^4.0.2",
    "supertest-session": "^4.1.0"
  },
  "engines": {
    "node": "^16",
    "npm": "^8"
  },
  "nodemonConfig": {
    "verbose": false,
    "ignore": [
      "*.test.js",
      "winston.log.json"
    ],
    "delay": 2200
  },
  "snyk": true
}
